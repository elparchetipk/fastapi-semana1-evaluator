---
name: ü§ñ Evaluaci√≥n Autom√°tica de Entrega

on:
  issues:
    types: [opened, edited]

permissions:
  contents: read
  issues: write
  pull-requests: write

jobs:
  evaluate:
    runs-on: ubuntu-latest

    # Solo ejecutar en issues con labels de evaluaci√≥n
    if: contains(github.event.issue.labels.*.name, 'evaluacion')

    steps:
      - name: üöÄ Checkout repositorio evaluador
        uses: actions/checkout@v4

      - name: üêç Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'

      - name: üì¶ Instalar dependencias
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: üîç Extraer informaci√≥n del issue
        id: extract_info
        run: |
          # Extraer URL del repositorio del cuerpo del issue
          REPO_URL=$(echo "${{ github.event.issue.body }}" | \
            grep -oE 'https://github\.com/[^][:space:]]*' | head -1)
          echo "repo_url=$REPO_URL" >> $GITHUB_OUTPUT

          # Determinar la semana bas√°ndose en los labels
          WEEK=""
          if [[ "${{ contains(github.event.issue.labels.*.name, 'semana-1') }}" == "true" ]] || \
             [[ "${{ contains(github.event.issue.labels.*.name, 'semana1') }}" == "true" ]]; then
            WEEK="1"
          elif [[ "${{ contains(github.event.issue.labels.*.name, 'semana-2') }}" == "true" ]] || \
               [[ "${{ contains(github.event.issue.labels.*.name, 'semana2') }}" == "true" ]]; then
            WEEK="2"
          elif [[ "${{ contains(github.event.issue.labels.*.name, 'semana-3') }}" == "true" ]] || \
               [[ "${{ contains(github.event.issue.labels.*.name, 'semana3') }}" == "true" ]]; then
            WEEK="3"
          elif [[ "${{ contains(github.event.issue.labels.*.name, 'semana-4') }}" == "true" ]] || \
               [[ "${{ contains(github.event.issue.labels.*.name, 'semana4') }}" == "true" ]]; then
            WEEK="4"
          fi
          echo "week=$WEEK" >> $GITHUB_OUTPUT

      - name: üß™ Ejecutar evaluaci√≥n autom√°tica
        id: evaluate
        run: |
          python evaluator/run.py \
            --repo-url "${{ steps.extract_info.outputs.repo_url }}" \
            --week "${{ steps.extract_info.outputs.week }}" \
            --format github
        continue-on-error: true

      - name: üìù Comentar resultados en el issue
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');

            // Leer el resultado de la evaluaci√≥n
            let evaluationResult = '';
            try {
              evaluationResult = fs.readFileSync('evaluation_result.md', 'utf8');
            } catch (error) {
              evaluationResult = `
              ## ‚ùå Error en la Evaluaci√≥n
              
              No se pudo completar la evaluaci√≥n autom√°tica. Posibles causas:
              
              - üîí **Repositorio privado**: Aseg√∫rate de que tu repositorio sea p√∫blico
              - üîó **URL incorrecta**: Verifica que la URL del repositorio est√© correcta
              - üìÅ **Estructura incorrecta**: Revisa que tengas los archivos requeridos
              - üêõ **Error t√©cnico**: Contacta a tu instructor para asistencia
              
              ### üìû Siguiente paso:
              1. Verifica que tu repositorio sea **p√∫blico**
              2. Aseg√∫rate de que la URL est√© correcta
              3. Revisa la estructura de archivos requerida
              4. Edita este issue para re-evaluar
              `;
            }

            // Determinar etiquetas a agregar
            const week = '${{ steps.extract_info.outputs.week }}';
            let labelsToAdd = [];
            let labelsToRemove = ['pendiente'];

            if (evaluationResult.includes('‚úÖ **APROBADO**')) {
              labelsToAdd.push('aprobado');
            } else {
              labelsToAdd.push('revisar');
            }

            // Comentar en el issue
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: evaluationResult
            });

            // Actualizar etiquetas
            for (const label of labelsToAdd) {
              try {
                await github.rest.issues.addLabels({
                  issue_number: context.issue.number,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  labels: [label]
                });
              } catch (error) {
                console.log(`Could not add label ${label}: ${error.message}`);
              }
            }

            for (const label of labelsToRemove) {
              try {
                await github.rest.issues.removeLabel({
                  issue_number: context.issue.number,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  name: label
                });
              } catch (error) {
                console.log(`Could not remove label ${label}: ${error.message}`);
              }
            }

      - name: üìä Reporte de m√©tricas
        if: always()
        run: |
          echo "::notice title=Evaluaci√≥n Completada::Semana ${{ steps.extract_info.outputs.week }} evaluada para repositorio ${{ steps.extract_info.outputs.repo_url }}"
